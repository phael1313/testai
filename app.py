import streamlit as st
from docx import Document
import requests

def extrair_texto_docx(arquivo):
    doc = Document(arquivo)
    return "\n".join([p.text.strip() for p in doc.paragraphs if p.text.strip()])

def gerar_html_completo_via_ia(texto):
    prompt = f"""Voc√™ √© um gerador de relat√≥rios t√©cnicos interativos. Com base no conte√∫do abaixo, crie um c√≥digo HTML completo que contenha:

- T√≠tulos, se√ß√µes e subt√≥picos com base no conte√∫do
- Cada item validado/testado deve conter:
  - Um checkbox ao lado esquerdo
  - Um texto explicativo/descritivo do item
- Campo "Log de Altera√ß√µes" edit√°vel
- Bot√µes funcionais no final da p√°gina:
  - "Salvar Progresso" (salva marca√ß√µes no navegador com localStorage)
  - "Exportar Relat√≥rio" (baixa vers√£o sem progresso)
  - "Exportar HTML com Progresso" (baixa com checkboxes marcados e log)
  - "Gerar Relat√≥rio de Controle de Teste"
  - "Limpar Log"
  - "Reiniciar Testes"

Inclua estilos CSS e scripts JS no pr√≥prio HTML. O layout deve ser bonito, organizado e totalmente funcional.

Conte√∫do base:
{texto}
"""  

    response = requests.post(
        "https://openrouter.ai/api/v1/chat/completions",
        headers={
            "Authorization": f"Bearer {st.secrets['openrouter_key']}",
            "Content-Type": "application/json"
        },
        json={
            "model": "openchat/openchat-7b",
            "messages": [{"role": "user", "content": prompt}]
        }
    )
    resultado = response.json()
    if "choices" in resultado:
        return resultado["choices"][0]["message"]["content"]
    else:
        return "<p>Erro ao gerar relat√≥rio via IA.</p>"

st.set_page_config(page_title="Testai - IA HTML Din√¢mico", layout="wide")
st.title("üìÑ Testai ‚Äî Relat√≥rio HTML com IA Din√¢mica")

uploaded_file = st.file_uploader("üìé Envie um arquivo .docx", type=["docx"])

if uploaded_file:
    texto = extrair_texto_docx(uploaded_file)
    html = None
    with st.spinner("üß† Gerando relat√≥rio inteligente com IA..."):
        html = gerar_html_completo_via_ia(texto)

    if html:
        st.download_button("üì• Baixar Relat√≥rio HTML com IA", data=html, file_name="relatorio_completo_ia.html", mime="text/html")
        st.components.v1.html(html, height=1000, scrolling=True)